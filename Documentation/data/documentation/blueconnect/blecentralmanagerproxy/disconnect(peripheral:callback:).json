{"abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"callback"},{"text":": ((","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")? = nil)","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"peripheral","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"BlePeripheral"},{"text":" to disconnect.","type":"text"}]}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional closure that is called with a "},{"code":"Result<Void, Error>","type":"codeVoice"},{"type":"text","text":", providing success or failure of the disconnection attempt."},{"type":"text","text":" "},{"text":"If the disconnection is successful, ","type":"text"},{"code":".success(())","type":"codeVoice"},{"text":" is passed. If the operation fails, ","type":"text"},{"type":"codeVoice","code":".failure(Error)"},{"text":" is passed with an appropriate error.","type":"text"}]}]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Example usage:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"],"syntax":"swift"},{"content":[{"inlineContent":[{"text":"If the peripheral is already in a ","type":"text"},{"code":".disconnected","type":"codeVoice"},{"text":" state, the callback is immediately called with success.","type":"text"}],"type":"paragraph"}],"name":"Note","type":"aside","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":"If the peripheral is already in the process of disconnecting ("},{"code":".disconnecting","type":"codeVoice"},{"type":"text","text":" state), the method does not reinitiate the disconnection."}],"type":"paragraph"}],"name":"Note","style":"note","type":"aside"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"]}],"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGcSgtF","role":"symbol","modules":[{"name":"BlueConnect"}],"symbolKind":"method","title":"disconnect(peripheral:callback:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"disconnect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP","text":"BlePeripheral"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"extendedModule":"BlueConnect"},"sections":[],"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"kind":"symbol","references":{"doc://BlueConnect/documentation/BlueConnect":{"url":"\/documentation\/blueconnect","title":"BlueConnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"kind":"symbol","role":"symbol","title":"BleCentralManagerProxy","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","abstract":[{"type":"codeVoice","code":"BleCentralManagerProxy"},{"text":" provides a higher-level abstraction for managing BLE peripherals via ","type":"text"},{"code":"BleCentralManager","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"BleCentralManagerProxy"}],"url":"\/documentation\/blueconnect\/blecentralmanagerproxy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BleCentralManagerProxy","kind":"identifier"}]},"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"url":"\/documentation\/blueconnect\/bleperipheral","abstract":[{"text":"A protocol to mimic the capabilities of a ","type":"text"},{"code":"CBPeripheral","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlePeripheral"}],"navigatorTitle":[{"text":"BlePeripheral","kind":"identifier"}],"title":"BlePeripheral","type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"text":": any ","kind":"text"},{"text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": (("},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"title":"disconnect(peripheral:callback:)","abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","role":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"}}}