{"kind":"symbol","abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","text":"BlePeripheral","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")? = nil)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"name":"peripheral","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"BlePeripheral"},{"text":" to disconnect.","type":"text"}],"type":"paragraph"}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An optional closure that is called with a "},{"code":"Result<Void, Error>","type":"codeVoice"},{"text":", providing success or failure of the disconnection attempt.","type":"text"},{"type":"text","text":" "},{"text":"If the disconnection is successful, ","type":"text"},{"code":".success(())","type":"codeVoice"},{"type":"text","text":" is passed. If the operation fails, "},{"code":".failure(Error)","type":"codeVoice"},{"text":" is passed with an appropriate error.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Example usage:"}],"type":"paragraph"},{"syntax":"swift","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"],"type":"codeListing"},{"name":"Note","style":"note","content":[{"inlineContent":[{"type":"text","text":"If the peripheral is already in a "},{"code":".disconnected","type":"codeVoice"},{"type":"text","text":" state, the callback is immediately called with success."}],"type":"paragraph"}],"type":"aside"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the peripheral is already in the process of disconnecting ("},{"code":".disconnecting","type":"codeVoice"},{"type":"text","text":" state), the method does not reinitiate the disconnection."}]}],"name":"Note","style":"note"}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"]}],"metadata":{"externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGcSgtF","extendedModule":"BlueConnect","title":"disconnect(peripheral:callback:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"BlePeripheral","preciseIdentifier":"s:11BlueConnect13BlePeripheralP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")?)","kind":"text"}],"role":"symbol","modules":[{"name":"BlueConnect"}],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"title":"BlePeripheral","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BlePeripheral"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlePeripheral","kind":"identifier"}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","url":"\/documentation\/blueconnect\/bleperipheral","type":"topic","abstract":[{"type":"text","text":"A protocol to mimic the capabilities of a "},{"type":"codeVoice","code":"CBPeripheral"},{"type":"text","text":"."}],"kind":"symbol"},"doc://BlueConnect/documentation/BlueConnect":{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","role":"collection","url":"\/documentation\/blueconnect","title":"BlueConnect","type":"topic","abstract":[],"kind":"symbol"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"role":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)","type":"topic","abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}],"title":"disconnect(peripheral:callback:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"disconnect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"kind":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy","abstract":[{"code":"BleCentralManagerProxy","type":"codeVoice"},{"type":"text","text":" provides a higher-level abstraction for managing BLE peripherals via "},{"code":"BleCentralManager","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","title":"BleCentralManagerProxy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BleCentralManagerProxy"}],"navigatorTitle":[{"text":"BleCentralManagerProxy","kind":"identifier"}],"type":"topic"}}}