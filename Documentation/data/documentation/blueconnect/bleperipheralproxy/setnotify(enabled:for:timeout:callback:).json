{"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy\/setNotify(enabled:for:timeout:callback:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy"]]},"metadata":{"symbolKind":"method","title":"setNotify(enabled:for:timeout:callback:)","extendedModule":"BlueConnect","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setNotify"},{"kind":"text","text":"("},{"text":"enabled","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"text":"CBUUID","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBUUID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","kind":"typeIdentifier","text":"DispatchTimeInterval"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"modules":[{"name":"BlueConnect"}],"role":"symbol","roleHeading":"Instance Method","externalID":"s:11BlueConnect18BlePeripheralProxyC9setNotify7enabled3for7timeout8callbackySb_So6CBUUIDC8Dispatch0M12TimeIntervalOys6ResultOySbs5Error_pGctF"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"setNotify"},{"text":"(","kind":"text"},{"text":"enabled","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"for","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"characteristicUUID"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBUUID","text":"CBUUID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DispatchTimeInterval","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"text":" = .seconds(10), ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"code":"true","type":"codeVoice"},{"text":" to enable notifications, ","type":"text"},{"type":"codeVoice","code":"false"},{"type":"text","text":" to disable notifications for the characteristic."}]}],"name":"enabled"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The UUID of the characteristic for which to set the notification state.","type":"text"}]}],"name":"characteristicUUID"},{"content":[{"inlineContent":[{"text":"The timeout duration for the notification set operation. If the operation does not complete within this time, it will fail.","type":"text"}],"type":"paragraph"}],"name":"timeout"},{"content":[{"inlineContent":[{"text":"A closure to execute when the characteristic notification state is updated. The closure receives a ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" indicating success or failure, with the current notification state as a success value."}],"type":"paragraph"}],"name":"callback"}],"kind":"parameters"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method updates the notification state for the given characteristic and executes the provided callback when the operation is complete."},{"type":"text","text":" "},{"type":"text","text":"If notifications are already in the desired state, the callback is called immediately with the current state."}]},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"If the desired notification state is already set, the method will immediately return the current state without performing any further operations."}],"type":"paragraph"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/bleperipheralproxy\/setnotify(enabled:for:timeout:callback:)"]}],"abstract":[{"text":"Enables or disables notifications for a specific characteristic.","type":"text"}],"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheralProxy/setNotify(enabled:for:timeout:callback:)":{"title":"setNotify(enabled:for:timeout:callback:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setNotify","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"enabled"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"for"},{"text":": ","kind":"text"},{"text":"CBUUID","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBUUID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"text":"DispatchTimeInterval","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"url":"\/documentation\/blueconnect\/bleperipheralproxy\/setnotify(enabled:for:timeout:callback:)","abstract":[{"text":"Enables or disables notifications for a specific characteristic.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy\/setNotify(enabled:for:timeout:callback:)"},"doc://BlueConnect/documentation/BlueConnect":{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","role":"collection","url":"\/documentation\/blueconnect","title":"BlueConnect","type":"topic","abstract":[],"kind":"symbol"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralProxy":{"abstract":[{"code":"BlePeripheralProxy","type":"codeVoice"},{"type":"text","text":" provides an interface for interacting with a BLE peripheral and managing BLE operations."}],"title":"BlePeripheralProxy","navigatorTitle":[{"text":"BlePeripheralProxy","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy","role":"symbol","kind":"symbol","url":"\/documentation\/blueconnect\/bleperipheralproxy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlePeripheralProxy","kind":"identifier"}]}}}