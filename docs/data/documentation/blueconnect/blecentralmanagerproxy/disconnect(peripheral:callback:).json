{"metadata":{"symbolKind":"method","externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGctF","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP","text":"BlePeripheral"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"title":"disconnect(peripheral:callback:)","modules":[{"name":"BlueConnect"}],"extendedModule":"BlueConnect"},"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"disconnect"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"kind":"text","text":": any "},{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP","text":"BlePeripheral"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":" = { _ in })"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"BlePeripheral","type":"codeVoice"},{"type":"text","text":" to disconnect."}]}],"name":"peripheral"},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure called with a "},{"type":"codeVoice","code":"Result<Void, Error>"},{"type":"text","text":", providing success or failure of the disconnection attempt."},{"text":" ","type":"text"},{"type":"text","text":"If the disconnection is successful, "},{"type":"codeVoice","code":".success(())"},{"type":"text","text":" is passed. If the operation fails, "},{"code":".failure(Error)","type":"codeVoice"},{"text":" is passed with an appropriate error.","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example usage:"}]},{"syntax":"swift","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"],"type":"codeListing"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"If the peripheral is already in a "},{"type":"codeVoice","code":".disconnected"},{"type":"text","text":" state, the callback is immediately called with success."}],"type":"paragraph"}],"style":"note","name":"Note"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"If the peripheral is already in the process of disconnecting (","type":"text"},{"type":"codeVoice","code":".disconnecting"},{"type":"text","text":" state), the method does not reinitiate the disconnection."}]}]}]}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)"},"abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}],"references":{"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"kind":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","role":"symbol","title":"disconnect(peripheral:callback:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","kind":"typeIdentifier","text":"BlePeripheral"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}]},"doc://BlueConnect/documentation/BlueConnect":{"abstract":[],"url":"\/documentation\/blueconnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","kind":"symbol","title":"BlueConnect","type":"topic","role":"collection"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"title":"BlePeripheral","kind":"symbol","url":"\/documentation\/blueconnect\/bleperipheral","abstract":[{"type":"text","text":"A protocol to mimic the capabilities of a "},{"code":"CBPeripheral","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"BlePeripheral","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BlePeripheral","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","role":"symbol"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"navigatorTitle":[{"text":"BleCentralManagerProxy","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"BleCentralManagerProxy"},{"text":" provides a higher-level abstraction for managing BLE peripherals via ","type":"text"},{"type":"codeVoice","code":"BleCentralManager"},{"text":".","type":"text"}],"type":"topic","title":"BleCentralManagerProxy","kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","url":"\/documentation\/blueconnect\/blecentralmanagerproxy","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"BleCentralManagerProxy","kind":"identifier"}],"role":"symbol"}}}