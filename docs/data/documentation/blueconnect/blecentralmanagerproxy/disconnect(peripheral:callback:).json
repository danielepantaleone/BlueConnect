{"abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","text":"BlePeripheral","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":" = { _ in })","kind":"text"}]}]},{"parameters":[{"name":"peripheral","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"BlePeripheral"},{"text":" to disconnect.","type":"text"}],"type":"paragraph"}]},{"name":"callback","content":[{"type":"paragraph","inlineContent":[{"text":"A closure called with a ","type":"text"},{"code":"Result<Void, Error>","type":"codeVoice"},{"type":"text","text":", providing success or failure of the disconnection attempt."},{"text":" ","type":"text"},{"type":"text","text":"If the disconnection is successful, "},{"code":".success(())","type":"codeVoice"},{"type":"text","text":" is passed. If the operation fails, "},{"type":"codeVoice","code":".failure(Error)"},{"text":" is passed with an appropriate error.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Example usage:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the peripheral is already in a "},{"type":"codeVoice","code":".disconnected"},{"type":"text","text":" state, the callback is immediately called with success."}]}],"name":"Note","type":"aside"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"If the peripheral is already in the process of disconnecting ("},{"code":".disconnecting","type":"codeVoice"},{"type":"text","text":" state), the method does not reinitiate the disconnection."}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"metadata":{"modules":[{"name":"BlueConnect"}],"extendedModule":"BlueConnect","externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGctF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"kind":"text","text":": any "},{"text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"disconnect(peripheral:callback:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"references":{"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"type":"topic","url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)","role":"symbol","abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}],"title":"disconnect(peripheral:callback:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","text":"BlePeripheral","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)"},"doc://BlueConnect/documentation/BlueConnect":{"title":"BlueConnect","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","url":"\/documentation\/blueconnect","type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BleCentralManagerProxy","kind":"identifier"}],"url":"\/documentation\/blueconnect\/blecentralmanagerproxy","title":"BleCentralManagerProxy","kind":"symbol","type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","abstract":[{"code":"BleCentralManagerProxy","type":"codeVoice"},{"type":"text","text":" provides a higher-level abstraction for managing BLE peripherals via "},{"type":"codeVoice","code":"BleCentralManager"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"BleCentralManagerProxy"}],"role":"symbol"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"type":"topic","abstract":[{"text":"A protocol to mimic the capabilities of a ","type":"text"},{"code":"CBPeripheral","type":"codeVoice"},{"type":"text","text":"."}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BlePeripheral"}],"url":"\/documentation\/blueconnect\/bleperipheral","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlePeripheral"}],"role":"symbol","title":"BlePeripheral"}}}