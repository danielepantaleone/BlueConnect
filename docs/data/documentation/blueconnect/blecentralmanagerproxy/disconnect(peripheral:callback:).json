{"sections":[],"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"disconnect","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"peripheral"},{"text":": any ","kind":"text"},{"text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGcSgtF","role":"symbol","symbolKind":"method","extendedModule":"BlueConnect","title":"disconnect(peripheral:callback:)","roleHeading":"Instance Method","modules":[{"name":"BlueConnect"}]},"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": any "},{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP","text":"BlePeripheral"},{"kind":"text","text":", "},{"text":"callback","kind":"externalParam"},{"text":": ((","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")? = nil)","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"code":"BlePeripheral","type":"codeVoice"},{"type":"text","text":" to disconnect."}],"type":"paragraph"}],"name":"peripheral"},{"content":[{"inlineContent":[{"type":"text","text":"An optional closure that is called with a "},{"type":"codeVoice","code":"Result<Void, Error>"},{"text":", providing success or failure of the disconnection attempt.","type":"text"},{"text":" ","type":"text"},{"text":"If the disconnection is successful, ","type":"text"},{"code":".success(())","type":"codeVoice"},{"text":" is passed. If the operation fails, ","type":"text"},{"type":"codeVoice","code":".failure(Error)"},{"text":" is passed with an appropriate error.","type":"text"}],"type":"paragraph"}],"name":"callback"}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Example usage:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"If the peripheral is already in a "},{"code":".disconnected","type":"codeVoice"},{"type":"text","text":" state, the callback is immediately called with success."}],"type":"paragraph"}],"style":"note","name":"Note"},{"name":"Note","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the peripheral is already in the process of disconnecting ("},{"code":".disconnecting","type":"codeVoice"},{"type":"text","text":" state), the method does not reinitiate the disconnection."}]}]}],"kind":"content"}],"abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": (("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":")?)","kind":"text"}],"title":"disconnect(peripheral:callback:)","kind":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}],"role":"symbol"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"abstract":[{"code":"BleCentralManagerProxy","type":"codeVoice"},{"type":"text","text":" provides a higher-level abstraction for managing BLE peripherals via "},{"type":"codeVoice","code":"BleCentralManager"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"BleCentralManagerProxy","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy","navigatorTitle":[{"kind":"identifier","text":"BleCentralManagerProxy"}],"title":"BleCentralManagerProxy","role":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","type":"topic"},"doc://BlueConnect/documentation/BlueConnect":{"url":"\/documentation\/blueconnect","abstract":[],"role":"collection","type":"topic","title":"BlueConnect","kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"abstract":[{"text":"A protocol to mimic the capabilities of a ","type":"text"},{"type":"codeVoice","code":"CBPeripheral"},{"type":"text","text":"."}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","role":"symbol","navigatorTitle":[{"text":"BlePeripheral","kind":"identifier"}],"type":"topic","title":"BlePeripheral","url":"\/documentation\/blueconnect\/bleperipheral","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlePeripheral","kind":"identifier"}],"kind":"symbol"}}}