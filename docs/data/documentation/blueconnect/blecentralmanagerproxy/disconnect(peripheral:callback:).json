{"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","interfaceLanguage":"swift"},"metadata":{"title":"disconnect(peripheral:callback:)","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","kind":"typeIdentifier","text":"BlePeripheral"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"extendedModule":"BlueConnect","role":"symbol","roleHeading":"Instance Method","externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGctF","modules":[{"name":"BlueConnect"}]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"disconnect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","text":"BlePeripheral","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":" = { _ in })","kind":"text"}],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"peripheral","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"BlePeripheral","type":"codeVoice"},{"text":" to disconnect.","type":"text"}]}]},{"name":"callback","content":[{"inlineContent":[{"type":"text","text":"A closure called with a "},{"code":"Result<Void, Error>","type":"codeVoice"},{"type":"text","text":", providing success or failure of the disconnection attempt."},{"type":"text","text":" "},{"type":"text","text":"If the disconnection is successful, "},{"code":".success(())","type":"codeVoice"},{"type":"text","text":" is passed. If the operation fails, "},{"code":".failure(Error)","type":"codeVoice"},{"type":"text","text":" is passed with an appropriate error."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"Example usage:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"],"syntax":"swift"},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"text":"If the peripheral is already in a ","type":"text"},{"code":".disconnected","type":"codeVoice"},{"text":" state, the callback is immediately called with success.","type":"text"}],"type":"paragraph"}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"If the peripheral is already in the process of disconnecting (","type":"text"},{"code":".disconnecting","type":"codeVoice"},{"text":" state), the method does not reinitiate the disconnection.","type":"text"}]}]}]}],"variants":[{"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"kind":"text","text":"("},{"kind":"externalParam","text":"peripheral"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","kind":"typeIdentifier","text":"BlePeripheral"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"type":"topic","title":"disconnect(peripheral:callback:)","abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}],"url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)"},"doc://BlueConnect/documentation/BlueConnect":{"abstract":[],"role":"collection","type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","url":"\/documentation\/blueconnect","kind":"symbol","title":"BlueConnect"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"title":"BlePeripheral","type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","kind":"symbol","url":"\/documentation\/blueconnect\/bleperipheral","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlePeripheral","kind":"identifier"}],"abstract":[{"text":"A protocol to mimic the capabilities of a ","type":"text"},{"code":"CBPeripheral","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"BlePeripheral","kind":"identifier"}]},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"role":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BleCentralManagerProxy","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"BleCentralManagerProxy","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"BleCentralManagerProxy"},{"type":"text","text":" provides a higher-level abstraction for managing BLE peripherals via "},{"type":"codeVoice","code":"BleCentralManager"},{"type":"text","text":"."}],"title":"BleCentralManagerProxy"}}}