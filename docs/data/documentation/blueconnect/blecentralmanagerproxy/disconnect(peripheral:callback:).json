{"abstract":[{"text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy"]]},"metadata":{"role":"symbol","extendedModule":"BlueConnect","modules":[{"name":"BlueConnect"}],"title":"disconnect(peripheral:callback:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"disconnect"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","kind":"typeIdentifier","text":"BlePeripheral"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"externalID":"s:11BlueConnect22BleCentralManagerProxyC10disconnect10peripheral8callbackyAA0C10Peripheral_p_ys6ResultOyyts5Error_pGctF"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"disconnect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"peripheral","kind":"externalParam"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11BlueConnect13BlePeripheralP","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral","kind":"typeIdentifier","text":"BlePeripheral"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":" = { _ in })","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"BlePeripheral","type":"codeVoice"},{"type":"text","text":" to disconnect."}]}],"name":"peripheral"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure called with a ","type":"text"},{"code":"Result<Void, Error>","type":"codeVoice"},{"type":"text","text":", providing success or failure of the disconnection attempt."},{"text":" ","type":"text"},{"type":"text","text":"If the disconnection is successful, "},{"code":".success(())","type":"codeVoice"},{"type":"text","text":" is passed. If the operation fails, "},{"type":"codeVoice","code":".failure(Error)"},{"text":" is passed with an appropriate error.","type":"text"}]}],"name":"callback"}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Example usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["bleCentralManagerProxy.disconnect(peripheral: peripheral) { result in","    switch result {","        case .success:","            print(\"Successfully disconnected\")","        case .failure(let error):","            print(\"Failed to disconnect: \\(error)\")","    }","}"]},{"content":[{"inlineContent":[{"type":"text","text":"If the peripheral is already in a "},{"type":"codeVoice","code":".disconnected"},{"text":" state, the callback is immediately called with success.","type":"text"}],"type":"paragraph"}],"style":"note","type":"aside","name":"Note"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the peripheral is already in the process of disconnecting ("},{"code":".disconnecting","type":"codeVoice"},{"type":"text","text":" state), the method does not reinitiate the disconnection."}]}],"name":"Note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)"},"references":{"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy":{"title":"BleCentralManagerProxy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BleCentralManagerProxy"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"BleCentralManagerProxy"}],"url":"\/documentation\/blueconnect\/blecentralmanagerproxy","abstract":[{"type":"codeVoice","code":"BleCentralManagerProxy"},{"type":"text","text":" provides a higher-level abstraction for managing BLE peripherals via "},{"code":"BleCentralManager","type":"codeVoice"},{"type":"text","text":"."}]},"doc://BlueConnect/documentation/BlueConnect/BlePeripheral":{"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlePeripheral","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"BlePeripheral","kind":"identifier"}],"abstract":[{"type":"text","text":"A protocol to mimic the capabilities of a "},{"code":"CBPeripheral","type":"codeVoice"},{"type":"text","text":"."}],"title":"BlePeripheral","url":"\/documentation\/blueconnect\/bleperipheral","type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheral"},"doc://BlueConnect/documentation/BlueConnect":{"role":"collection","url":"\/documentation\/blueconnect","title":"BlueConnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","kind":"symbol","abstract":[],"type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BleCentralManagerProxy/disconnect(peripheral:callback:)":{"type":"topic","title":"disconnect(peripheral:callback:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"disconnect","kind":"identifier"},{"kind":"text","text":"("},{"text":"peripheral","kind":"externalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"BlePeripheral","preciseIdentifier":"s:11BlueConnect13BlePeripheralP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BleCentralManagerProxy\/disconnect(peripheral:callback:)","kind":"symbol","url":"\/documentation\/blueconnect\/blecentralmanagerproxy\/disconnect(peripheral:callback:)","abstract":[{"type":"text","text":"Disconnects a BLE peripheral and optionally notifies via a callback when the operation completes."}]}}}