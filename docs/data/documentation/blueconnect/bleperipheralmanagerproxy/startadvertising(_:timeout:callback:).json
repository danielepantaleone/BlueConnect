{"kind":"symbol","metadata":{"role":"symbol","title":"startAdvertising(_:timeout:callback:)","externalID":"s:11BlueConnect25BlePeripheralManagerProxyC16startAdvertising_7timeout8callbackySDySSypGSg_8Dispatch0K12TimeIntervalOys6ResultOyyts5Error_pGctF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"startAdvertising","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"text":"Any","kind":"keyword"},{"text":"]?, ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"text":"DispatchTimeInterval","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", any "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"symbolKind":"method","extendedModule":"BlueConnect","roleHeading":"Instance Method","modules":[{"name":"BlueConnect"}]},"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy"]]},"sections":[],"abstract":[{"text":"Starts advertising peripheral data.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startAdvertising","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"advertisementData","kind":"internalParam"},{"kind":"text","text":": ["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"]? = nil, ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","text":"DispatchTimeInterval","kind":"typeIdentifier"},{"kind":"text","text":" = .never, "},{"text":"callback","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"text":" = { _ in })","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"advertisementData","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A dictionary containing data to advertise, such as service UUIDs and the local name. Defaults to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no advertisement data is provided."}]}]},{"name":"timeout","content":[{"inlineContent":[{"type":"text","text":"The time interval to wait for the advertising to start before timing out. Defaults to "},{"code":".never","type":"codeVoice"},{"text":", meaning no timeout is applied.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that is called with the result of the advertising operation. The closure is passed a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type, which is "},{"code":".success","type":"codeVoice"},{"type":"text","text":" on successful advertising start or "},{"type":"codeVoice","code":".failure"},{"text":" with an error if the operation fails. Defaults to a no-op closure.","type":"text"}]}],"name":"callback"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Initiates advertising of the peripheralâ€™s services and other provided advertisement data. The method ensures that the peripheral manager is in a powered-on state before starting the advertising process. A callback is invoked with the result of the operation, either success or an error."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/blueconnect\/bleperipheralmanagerproxy\/startadvertising(_:timeout:callback:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/startAdvertising(_:timeout:callback:)","interfaceLanguage":"swift"},"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy/startAdvertising(_:timeout:callback:)":{"title":"startAdvertising(_:timeout:callback:)","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy\/startadvertising(_:timeout:callback:)","abstract":[{"text":"Starts advertising peripheral data.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/startAdvertising(_:timeout:callback:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"startAdvertising"},{"text":"([","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":" : ","kind":"text"},{"kind":"keyword","text":"Any"},{"kind":"text","text":"]?, "},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"text":"DispatchTimeInterval","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"callback"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":", any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"doc://BlueConnect/documentation/BlueConnect":{"abstract":[],"url":"\/documentation\/blueconnect","title":"BlueConnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","kind":"symbol","type":"topic","role":"collection"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy","abstract":[{"type":"text","text":"A proxy class to manage a "},{"type":"codeVoice","code":"BlePeripheralManager"},{"text":" instance, providing reactive publishers for various BLE events.","type":"text"}],"title":"BlePeripheralManagerProxy","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy","type":"topic","role":"symbol","navigatorTitle":[{"text":"BlePeripheralManagerProxy","kind":"identifier"}]}}}