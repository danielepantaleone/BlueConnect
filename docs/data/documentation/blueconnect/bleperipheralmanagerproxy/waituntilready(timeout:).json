{"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"waitUntilReady","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"text":"DispatchTimeInterval","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"text":" = .never) ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"timeout","content":[{"type":"paragraph","inlineContent":[{"text":"The maximum duration to wait for the peripheral manager to be ready. The default value is ","type":"text"},{"code":".never","type":"codeVoice"},{"text":", indicating no timeout.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This method uses an async\/await pattern to wait for the peripheral manager to become ready. It checks the peripheral manager’s state and resumes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"with success if it is already "},{"code":".poweredOn","type":"codeVoice"},{"text":". Otherwise, it waits until the state changes to ","type":"text"},{"type":"codeVoice","code":".poweredOn"},{"text":" within the specified timeout.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"If the state is unauthorized or unsupported, it throws an error."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example usage:"}],"type":"paragraph"},{"syntax":"swift","code":["do {","    try await peripheralManagerProxy.waitUntilReady(timeout: .seconds(5))","    \/\/ Peripheral manager is ready","} catch {","    \/\/ Handle error (e.g., unsupported or unauthorized state)","}"],"type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":"An error if the it’s not possible to wait for the peripheral manager to be ready within the provided timeout."}],"type":"paragraph"}],"type":"aside","name":"Throws","style":"note"}],"kind":"content"}],"abstract":[{"type":"text","text":"Waits asynchronously until the peripheral manager is in the "},{"type":"codeVoice","code":".poweredOn"},{"type":"text","text":" state, or throws an error if the state is unauthorized or unsupported."}],"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy"]]},"metadata":{"title":"waitUntilReady(timeout:)","extendedModule":"BlueConnect","externalID":"s:11BlueConnect25BlePeripheralManagerProxyC14waitUntilReady7timeouty8Dispatch0K12TimeIntervalO_tYaKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"waitUntilReady"},{"text":"(","kind":"text"},{"text":"timeout","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"}],"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"BlueConnect"}]},"kind":"symbol","identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/waitUntilReady(timeout:)","interfaceLanguage":"swift"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/bleperipheralmanagerproxy\/waituntilready(timeout:)"]}],"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy/waitUntilReady(timeout:)":{"title":"waitUntilReady(timeout:)","type":"topic","kind":"symbol","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy\/waituntilready(timeout:)","abstract":[{"type":"text","text":"Waits asynchronously until the peripheral manager is in the "},{"type":"codeVoice","code":".poweredOn"},{"text":" state, or throws an error if the state is unauthorized or unsupported.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"waitUntilReady","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"timeout"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","text":"DispatchTimeInterval","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/waitUntilReady(timeout:)","role":"symbol"},"doc://BlueConnect/documentation/BlueConnect":{"role":"collection","url":"\/documentation\/blueconnect","title":"BlueConnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","kind":"symbol","abstract":[],"type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy":{"role":"symbol","title":"BlePeripheralManagerProxy","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"navigatorTitle":[{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"type":"topic","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy","abstract":[{"text":"A proxy class to manage a ","type":"text"},{"code":"BlePeripheralManager","type":"codeVoice"},{"type":"text","text":" instance, providing reactive publishers for various BLE events."}]}}}