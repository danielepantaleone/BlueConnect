{"abstract":[{"text":"Inherited from ","type":"text"},{"code":"CBPeripheralManagerDelegate.peripheralManagerDidUpdateState(_:)","type":"codeVoice"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/peripheralManagerDidUpdateState(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/CBPeripheralManagerDelegate-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"peripheralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"peripheral"},{"kind":"text","text":": "},{"preciseIdentifier":"c:objc(cs)CBPeripheralManager","text":"CBPeripheralManager","kind":"typeIdentifier"},{"kind":"text","text":")"}]}]}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/blueconnect\/bleperipheralmanagerproxy\/peripheralmanagerdidupdatestate(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"externalID":"c:@CM@BlueConnect@objc(cs)BlePeripheralManagerProxy(im)peripheralManagerDidUpdateState:","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"peripheralManagerDidUpdateState"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBPeripheralManager","text":"CBPeripheralManager","kind":"typeIdentifier"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"BlueConnect"}],"extendedModule":"BlueConnect","role":"symbol","title":"peripheralManagerDidUpdateState(_:)"},"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy/CBPeripheralManagerDelegate-Implementations":{"role":"collectionGroup","kind":"article","abstract":[],"type":"topic","title":"CBPeripheralManagerDelegate Implementations","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy\/cbperipheralmanagerdelegate-implementations","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/CBPeripheralManagerDelegate-Implementations"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy/peripheralManagerDidUpdateState(_:)":{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/peripheralManagerDidUpdateState(_:)","kind":"symbol","abstract":[],"title":"peripheralManagerDidUpdateState(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"peripheralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"text":"CBPeripheralManager","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheralManager"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy\/peripheralmanagerdidupdatestate(_:)"},"doc://BlueConnect/documentation/BlueConnect":{"role":"collection","url":"\/documentation\/blueconnect","title":"BlueConnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","kind":"symbol","abstract":[],"type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy":{"role":"symbol","title":"BlePeripheralManagerProxy","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"navigatorTitle":[{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"type":"topic","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy","abstract":[{"text":"A proxy class to manage a ","type":"text"},{"code":"BlePeripheralManager","type":"codeVoice"},{"type":"text","text":" instance, providing reactive publishers for various BLE events."}]}}}