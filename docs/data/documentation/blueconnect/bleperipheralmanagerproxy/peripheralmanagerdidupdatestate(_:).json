{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"peripheralManagerDidUpdateState","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"peripheral","kind":"internalParam"},{"kind":"text","text":": "},{"text":"CBPeripheralManager","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheralManager"},{"text":")","kind":"text"}],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"c:@CM@BlueConnect@objc(cs)BlePeripheralManagerProxy(im)peripheralManagerDidUpdateState:","symbolKind":"method","role":"symbol","modules":[{"name":"BlueConnect"}],"extendedModule":"BlueConnect","title":"peripheralManagerDidUpdateState(_:)","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"peripheralManagerDidUpdateState","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)CBPeripheralManager","text":"CBPeripheralManager"},{"kind":"text","text":")"}]},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"CBPeripheralManagerDelegate.peripheralManagerDidUpdateState(_:)"},{"type":"text","text":"."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/CBPeripheralManagerDelegate-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/bleperipheralmanagerproxy\/peripheralmanagerdidupdatestate(_:)"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/peripheralManagerDidUpdateState(_:)"},"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy/CBPeripheralManagerDelegate-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/CBPeripheralManagerDelegate-Implementations","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy\/cbperipheralmanagerdelegate-implementations","title":"CBPeripheralManagerDelegate Implementations"},"doc://BlueConnect/documentation/BlueConnect":{"kind":"symbol","role":"collection","title":"BlueConnect","url":"\/documentation\/blueconnect","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","abstract":[],"type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy/peripheralManagerDidUpdateState(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"peripheralManagerDidUpdateState"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBPeripheralManager","kind":"typeIdentifier","text":"CBPeripheralManager"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy\/peripheralManagerDidUpdateState(_:)","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy\/peripheralmanagerdidupdatestate(_:)","role":"symbol","abstract":[],"title":"peripheralManagerDidUpdateState(_:)"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralManagerProxy":{"type":"topic","url":"\/documentation\/blueconnect\/bleperipheralmanagerproxy","title":"BlePeripheralManagerProxy","role":"symbol","navigatorTitle":[{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralManagerProxy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BlePeripheralManagerProxy","kind":"identifier"}],"abstract":[{"type":"text","text":"A proxy class to manage a "},{"code":"BlePeripheralManager","type":"codeVoice"},{"text":" instance, providing reactive publishers for various BLE events.","type":"text"}]}}}