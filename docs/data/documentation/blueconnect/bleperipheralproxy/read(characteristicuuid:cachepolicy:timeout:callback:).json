{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"kind":"text","text":"("},{"text":"characteristicUUID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CBUUID","preciseIdentifier":"c:objc(cs)CBUUID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cachePolicy"},{"kind":"text","text":": "},{"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralCachePolicy","kind":"typeIdentifier","text":"BlePeripheralCachePolicy","preciseIdentifier":"s:11BlueConnect24BlePeripheralCachePolicyO"},{"text":" = .never, ","kind":"text"},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","text":"DispatchTimeInterval"},{"kind":"text","text":" = .seconds(10), "},{"kind":"externalParam","text":"callback"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The UUID of the characteristic to read."}],"type":"paragraph"}],"name":"characteristicUUID"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The cache policy that dictates whether the value should be fetched from the peripheral or retrieved from the cache. Defaults to ","type":"text"},{"code":".never","type":"codeVoice"},{"type":"text","text":", meaning fresh data is read directly from the peripheral unless specified otherwise."}]}],"name":"cachePolicy"},{"name":"timeout","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The timeout for the characteristic read operation. This is ignored if the value is fetched from the cache. Defaults to 10 seconds."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A closure that is executed when the read operation completes. The closure is passed a "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" containing the characteristic’s data or an error if the read fails."}],"type":"paragraph"}],"name":"callback"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This method attempts to read the characteristic’s value, either from the peripheral or the cache, depending on the specified cache policy."},{"type":"text","text":" "},{"type":"text","text":"If a read operation for the same characteristic is already in progress, the operation will not be triggered again."}],"type":"paragraph"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The read operation will only occur if no other read for the same characteristic is already in progress. Multiple simultaneous read requests for the same characteristic will not trigger multiple read operations."}]}],"name":"Note","style":"note"}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/BlueConnect\/documentation\/BlueConnect","doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy"]]},"kind":"symbol","abstract":[{"type":"text","text":"Reads the value of a characteristic and notifies the result through the provided callback."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/blueconnect\/bleperipheralproxy\/read(characteristicuuid:cachepolicy:timeout:callback:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy\/read(characteristicUUID:cachePolicy:timeout:callback:)"},"metadata":{"externalID":"s:11BlueConnect18BlePeripheralProxyC4read18characteristicUUID11cachePolicy7timeout8callbackySo6CBUUIDC_AA0cd5CacheJ0O8Dispatch0O12TimeIntervalOys6ResultOy10Foundation4DataVs5Error_pGctF","symbolKind":"method","title":"read(characteristicUUID:cachePolicy:timeout:callback:)","modules":[{"name":"BlueConnect"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"characteristicUUID"},{"kind":"text","text":": "},{"text":"CBUUID","preciseIdentifier":"c:objc(cs)CBUUID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"cachePolicy","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BlePeripheralCachePolicy","preciseIdentifier":"s:11BlueConnect24BlePeripheralCachePolicyO"},{"kind":"text","text":", "},{"text":"timeout","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","text":"DispatchTimeInterval"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":", any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"extendedModule":"BlueConnect","role":"symbol","roleHeading":"Instance Method"},"references":{"doc://BlueConnect/documentation/BlueConnect/BlePeripheralCachePolicy":{"role":"symbol","kind":"symbol","title":"BlePeripheralCachePolicy","navigatorTitle":[{"kind":"identifier","text":"BlePeripheralCachePolicy"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlePeripheralCachePolicy"}],"url":"\/documentation\/blueconnect\/bleperipheralcachepolicy","type":"topic","abstract":[{"text":"An enum that defines policies for caching values read from a ","type":"text"},{"code":"BlePeripheral","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralCachePolicy"},"doc://BlueConnect/documentation/BlueConnect":{"title":"BlueConnect","role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect","url":"\/documentation\/blueconnect","type":"topic"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralProxy/read(characteristicUUID:cachePolicy:timeout:callback:)":{"url":"\/documentation\/blueconnect\/bleperipheralproxy\/read(characteristicuuid:cachepolicy:timeout:callback:)","title":"read(characteristicUUID:cachePolicy:timeout:callback:)","identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy\/read(characteristicUUID:cachePolicy:timeout:callback:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"characteristicUUID"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:objc(cs)CBUUID","text":"CBUUID","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"cachePolicy","kind":"externalParam"},{"kind":"text","text":": "},{"text":"BlePeripheralCachePolicy","kind":"typeIdentifier","preciseIdentifier":"s:11BlueConnect24BlePeripheralCachePolicyO"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"text":", ","kind":"text"},{"text":"callback","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":", any ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"text":"Reads the value of a characteristic and notifies the result through the provided callback.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://BlueConnect/documentation/BlueConnect/BlePeripheralProxy":{"type":"topic","abstract":[{"type":"codeVoice","code":"BlePeripheralProxy"},{"text":" provides an interface for interacting with a BLE peripheral and managing BLE operations.","type":"text"}],"identifier":"doc:\/\/BlueConnect\/documentation\/BlueConnect\/BlePeripheralProxy","kind":"symbol","navigatorTitle":[{"text":"BlePeripheralProxy","kind":"identifier"}],"url":"\/documentation\/blueconnect\/bleperipheralproxy","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BlePeripheralProxy"}],"role":"symbol","title":"BlePeripheralProxy"}}}